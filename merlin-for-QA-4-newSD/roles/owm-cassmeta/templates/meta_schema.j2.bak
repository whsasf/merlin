/*This file contains Keyspace:KeyspaceMetadata and KeyspaceMigration that can be created using the
cassandra-cli command line interface as follows.

bin/cassandra-cli -host localhost -port port --file conf/schema_metadata

The cassandra-cli includes online help that explains the statements below. You can
accessed the help without connecting to a running cassandra instance by starting the
client and typing "help;"
*/
create keyspace KeyspaceMetadata
  with placement_strategy = 'NetworkTopologyStrategy'
  and strategy_options = {
{% set comma = joiner(",") %}
{% for site in sites -%}
      {{ comma() }}'{{site}}' : '{{metareplicationfactor}}'
{%- endfor %}
  } and durable_writes = true;

use KeyspaceMetadata;

create column family CF_Folder
  with column_type = 'Super'
  and comparator = 'TimeUUIDType'
  and subcomparator = 'BytesType'
  and default_validation_class = 'BytesType'
  and key_validation_class = 'BytesType'
  and replicate_on_write = true
  and compaction_strategy = 'org.apache.cassandra.db.compaction.LeveledCompactionStrategy'
  and comment = 'Maintain message metadata per folder. Store each message as a supercolumn.'
  and gc_grace = 518400
  and compression_options = {'sstable_compression' : 'org.apache.cassandra.io.compress.SnappyCompressor'};

create column family CF_MailboxSummary
  with column_type = Super
  and comparator = BytesType
  and subcomparator = BytesType
  and replicate_on_write = true
  and compaction_strategy = 'org.apache.cassandra.db.compaction.LeveledCompactionStrategy'
  and comment = 'This represents a mailbox view. Store info about messages in folders as supercolumns.'
  and gc_grace = 518400
  and read_repair_chance = 0.1;

create column family CF_AutoReply
  with column_type = Super
  and comparator = BytesType
  and subcomparator = BytesType
  and comment = 'This represents the auto replies for a mailbox. Store info about different auto reply types as supercolumns'
  and gc_grace = 518400
  and max_compaction_threshold = 32
  and min_compaction_threshold = 4
  and read_repair_chance = 0.1;

create column family CF_AutoReplySender
  with comparator = BytesType
  and comment = 'This represents the auto reply senders for a mailbox.'
  and gc_grace = 518400
  and max_compaction_threshold = 32
  and min_compaction_threshold = 4
  and read_repair_chance = 0.1;

create column family CF_SubjectIndex
  with column_type = 'Standard'
  and comparator = 'CompositeType(BytesType, TimeUUIDType)'
  and default_validation_class = 'BytesType'
  and key_validation_class = 'BytesType'
  and min_compaction_threshold = 4
  and max_compaction_threshold = 32
  and replicate_on_write = true
  and compaction_strategy = 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'
  and comment = 'Maintain message metadata per folder. Store each message as a supercolumn.'
  and compression_options = {'sstable_compression' : 'org.apache.cassandra.io.compress.SnappyCompressor'};


create column family CF_FromIndex
  with column_type = 'Standard'
  and comparator = 'CompositeType(BytesType, TimeUUIDType)'
  and default_validation_class = 'BytesType'
  and key_validation_class = 'BytesType'
  and min_compaction_threshold = 4
  and max_compaction_threshold = 32
  and replicate_on_write = true
  and compaction_strategy = 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'
  and comment = 'Maintain message metadata per folder. Store each message as a supercolumn.'
  and compression_options = {'sstable_compression' : 'org.apache.cassandra.io.compress.SnappyCompressor'};



create column family CF_SizeIndex
  with column_type = 'Standard'
  and comparator = 'CompositeType(LongType, TimeUUIDType)'
  and default_validation_class = 'BytesType'
  and key_validation_class = 'BytesType'
  and min_compaction_threshold = 4
  and max_compaction_threshold = 32
  and replicate_on_write = true
  and compaction_strategy = 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'
  and comment = 'Maintain message metadata per folder. Store each message as a supercolumn.'
  and compression_options = {'sstable_compression' : 'org.apache.cassandra.io.compress.SnappyCompressor'};



create column family CF_PriorityIndex
  with column_type = 'Standard'
  and comparator = 'CompositeType(IntegerType, TimeUUIDType)'
  and default_validation_class = 'BytesType'
  and key_validation_class = 'BytesType'
  and min_compaction_threshold = 4
  and max_compaction_threshold = 32
  and replicate_on_write = true
  and compaction_strategy = 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'
  and comment = 'Maintain message metadata per folder. Store each message as a supercolumn.'
  and compression_options = {'sstable_compression' : 'org.apache.cassandra.io.compress.SnappyCompressor'};



create column family CF_AttIndex
  with column_type = 'Standard'
  and comparator = 'CompositeType(IntegerType, TimeUUIDType)'
  and default_validation_class = 'BytesType'
  and key_validation_class = 'BytesType'
  and min_compaction_threshold = 4
  and max_compaction_threshold = 32
  and replicate_on_write = true
  and compaction_strategy = 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'
  and comment = 'Maintain message metadata per folder. Store each message as a supercolumn.'
  and compression_options = {'sstable_compression' : 'org.apache.cassandra.io.compress.SnappyCompressor'};


create column family CF_ToIndex
  with column_type = 'Standard'
  and comparator = 'CompositeType(BytesType, TimeUUIDType)'
  and default_validation_class = 'BytesType'
  and key_validation_class = 'BytesType'
  and min_compaction_threshold = 4
  and max_compaction_threshold = 32
  and replicate_on_write = true
  and compaction_strategy = 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'
  and comment = 'Maintain message metadata per folder. Store each message as a supercolumn.'
  and compression_options = {'sstable_compression' : 'org.apache.cassandra.io.compress.SnappyCompressor'};



create column family CF_CcIndex
  with column_type = 'Standard'
  and comparator = 'CompositeType(BytesType, TimeUUIDType)'
  and default_validation_class = 'BytesType'
  and key_validation_class = 'BytesType'
  and min_compaction_threshold = 4
  and max_compaction_threshold = 32
  and replicate_on_write = true
  and compaction_strategy = 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'
  and comment = 'Maintain message metadata per folder. Store each message as a supercolumn.'
  and compression_options = {'sstable_compression' : 'org.apache.cassandra.io.compress.SnappyCompressor'};



create column family CF_RMFlagIndex
  with column_type = 'Standard'
  and comparator = 'CompositeType(IntegerType, TimeUUIDType)'
  and default_validation_class = 'BytesType'
  and key_validation_class = 'BytesType'
  and min_compaction_threshold = 4
  and max_compaction_threshold = 32
  and replicate_on_write = true
  and compaction_strategy = 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'
  and comment = 'Maintain message metadata per folder. Store each message as a supercolumn.'
  and compression_options = {'sstable_compression' : 'org.apache.cassandra.io.compress.SnappyCompressor'};

create column family CF_MessageFlagsIndex
  with column_type = 'Standard'
  and comparator = 'CompositeType(IntegerType, BytesType, TimeUUIDType)'
  and default_validation_class = 'BytesType'
  and key_validation_class = 'BytesType'
  and min_compaction_threshold = 4
  and max_compaction_threshold = 32
  and replicate_on_write = true
  and compaction_strategy = 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'
  and comment = 'Maintain message metadata per folder. Store each message as a supercolumn.'
  and compression_options = {'sstable_compression' : 'org.apache.cassandra.io.compress.SnappyCompressor'};


create column family CF_UIDIndex
  with column_type = 'Standard'
  and comparator = 'LongType'
  and default_validation_class = 'BytesType'
  and key_validation_class = 'BytesType'
  and min_compaction_threshold = 4
  and max_compaction_threshold = 32
  and replicate_on_write = true
  and compaction_strategy = 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'
  and comment = 'This represents the auto reply senders for a mailbox.';

create column family CF_RecentIndex
  with column_type = 'Standard'
  and comparator = 'BytesType'
  and default_validation_class = 'BytesType'
  and key_validation_class = 'BytesType'
  and min_compaction_threshold = 4
  and max_compaction_threshold = 32
  and replicate_on_write = true
  and compaction_strategy = 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'
  and comment = 'This represents the auto reply senders for a mailbox.';


create column family CF_TimeIndex
  with column_type = 'Standard'
  and comparator = 'TimeUUIDType'
  and default_validation_class = 'BytesType'
  and key_validation_class = 'BytesType'
  and min_compaction_threshold = 4
  and max_compaction_threshold = 32
  and replicate_on_write = true
  and compaction_strategy = 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'
  and comment = 'This represents the auto reply senders for a mailbox.';

create column family CF_ConversationIndex
  with column_type = 'Standard'
  and comparator = 'CompositeType(BytesType, TimeUUIDType, BytesType)'
  and default_validation_class = 'BytesType'
  and key_validation_class = 'BytesType'
  and min_compaction_threshold = 4
  and max_compaction_threshold = 32
  and replicate_on_write = true
  and compaction_strategy = 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'
  and comment = 'Maintain the conversationID/ThreadID of each message stored as a supercolumn.'
  and compression_options = {'sstable_compression' : 'org.apache.cassandra.io.compress.SnappyCompressor'};

create column family CF_ConversationIndex1
  with column_type = 'Standard'
  and comparator = 'BytesType'
  and default_validation_class = 'BytesType'
  and key_validation_class = 'BytesType'
  and min_compaction_threshold = 4
  and max_compaction_threshold = 32
  and replicate_on_write = true
  and compaction_strategy = 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'
  and comment = 'Maintain the conversationID/ThreadID of each message stored as a supercolumn.'
  and compression_options = {'sstable_compression' : 'org.apache.cassandra.io.compress.SnappyCompressor'};

create column family CF_MessageLocalRefs
  with column_type = 'Super'
  and comparator = 'TimeUUIDType'
  and subcomparator = 'BytesType'
  and default_validation_class = 'BytesType'
  and key_validation_class = 'BytesType'
  and min_compaction_threshold = 4
  and max_compaction_threshold = 32
  and replicate_on_write = true
  and compaction_strategy = 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'
  and comment = 'Maintain message metadata per folder. Store each message as a supercolumn.'
  and compression_options = {'sstable_compression' : 'org.apache.cassandra.io.compress.SnappyCompressor'};


create column family CF_MessageRefs
with column_type = 'Standard'
  and comparator = 'BytesType'
  and default_validation_class = 'BytesType'
  and key_validation_class = 'BytesType'
  and min_compaction_threshold = 4
  and max_compaction_threshold = 32
  and replicate_on_write = true
  and compaction_strategy = 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'
  and comment = 'This represents the auto reply senders for a mailbox.'
  and gc_grace = 518400;




create column family CF_Mailbox
  with column_type = 'Super'
  and comparator = 'BytesType'
  and subcomparator = 'BytesType'
  and default_validation_class = 'BytesType'
  and key_validation_class = 'BytesType'
  and replicate_on_write = true
  and compaction_strategy = 'org.apache.cassandra.db.compaction.LeveledCompactionStrategy'
  and comment = 'Maintain message metadata per folder. Store each message as a supercolumn.'
  and gc_grace = 518400
  and compression_options = {'sstable_compression' : 'org.apache.cassandra.io.compress.SnappyCompressor'};


create column family CF_Maintenance
  with comparator = BytesType
  and comment = 'This represents a maintenance record.'
  and gc_grace = 518400
  and max_compaction_threshold = 32
  and min_compaction_threshold = 4
  and read_repair_chance = 0.1;

create column family CF_MailboxAged
  with comparator = BytesType
  and comment = 'This represents a maintenance  mailbox aging.'
  and gc_grace = 518400
  and max_compaction_threshold = 32
  and min_compaction_threshold = 4
  and read_repair_chance = 0.1;

create column family CF_HSM
  with comparator = TimeUUIDType
  and comment = 'This represents HSM Messages.'
  and gc_grace = 10
  and max_compaction_threshold = 32
  and min_compaction_threshold = 4
  and read_repair_chance = 0.1;


create column family CF_MimeInfo
  with column_type = 'Standard'
  and comparator = 'TimeUUIDType'
  and default_validation_class = 'BytesType'
  and key_validation_class = 'BytesType'
  and min_compaction_threshold = 4
  and max_compaction_threshold = 32
  and replicate_on_write = true
  and compaction_strategy = 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'
  and comment = 'Maintain message metadata per folder. Store each message as a supercolumn.'
  and compression_options = {'sstable_compression' : 'org.apache.cassandra.io.compress.SnappyCompressor'};

create column family CF_DataStore
  with column_type = 'Standard'
  and comparator = 'BytesType'
  and default_validation_class = 'BytesType'
  and key_validation_class = 'BytesType'
  and min_compaction_threshold = 4
  and max_compaction_threshold = 32
  and replicate_on_write = true
  and compaction_strategy = 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'
  and comment = 'Maintain message metadata per folder. Store each message as a supercolumn.'
  and compression_options = {'sstable_compression' : 'org.apache.cassandra.io.compress.SnappyCompressor'};
  
create column family CF_ParticipantUIDIndex
  with column_type = 'Standard'
  and comparator = 'CompositeType(BytesType, LongType)'
  and default_validation_class = 'TimeUUIDType'
  and key_validation_class = 'BytesType'
  and min_compaction_threshold = 4
  and max_compaction_threshold = 32
  and replicate_on_write = true
  and compaction_strategy = 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'
  and comment = 'Mainatining UID and msgUUID wrt to participant id in a mailbox.'
  and compression_options = {'sstable_compression' : 'org.apache.cassandra.io.compress.SnappyCompressor'};

create column family CF_ParticipantRecentIndex
  with column_type = 'Standard'
  and comparator = 'BytesType'
  and default_validation_class = 'BytesType'
  and key_validation_class = 'BytesType'
  and min_compaction_threshold = 4
  and max_compaction_threshold = 32
  and replicate_on_write = true
  and compaction_strategy = 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'
  and comment = 'Mainatining data of most recent message and other significant data for fast reading for a mailbox.'
  and compression_options = {'sstable_compression' : 'org.apache.cassandra.io.compress.SnappyCompressor'};

create column family CF_MODSEQIndex
  with column_type = 'Standard'
  and comparator = 'CompositeType(LongType, TimeUUIDType)'
  and default_validation_class = 'BytesType'
  and key_validation_class = 'BytesType'
  and min_compaction_threshold = 4
  and max_compaction_threshold = 32
  and replicate_on_write = true
  and compaction_strategy = 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'
  and comment = 'Mainatining MODSEQ of each message in a mailbox.'
  and compression_options = {'sstable_compression' : 'org.apache.cassandra.io.compress.SnappyCompressor'};
  
