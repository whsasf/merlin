<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.8" jmeter="2.13 r1665067">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Test Cassandra processes are up and running" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1441960643000</longProp>
        <longProp name="ThreadGroup.end_time">1441960643000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="cass_User_Name" elementType="Argument">
              <stringProp name="Argument.name">cass_User_Name</stringProp>
              <stringProp name="Argument.value">{{ cass_user[0].username }}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cass_version" elementType="Argument">
              <stringProp name="Argument.name">cass_version</stringProp>
              <stringProp name="Argument.value">{{ cassandra_source_version }}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="cass_node" elementType="Argument">
              <stringProp name="Argument.name">cass_node</stringProp>
              <stringProp name="Argument.value">meta</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
{% if groups['cassandra'] is defined %}
{% for host in groups[node_site + '-cassmeta'] %}
            <elementProp name="cass_host{{ loop.index }}" elementType="Argument">
              <stringProp name="Argument.name">cass_host{{ loop.index }}</stringProp>
              <stringProp name="Argument.value">{{ host }}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
{% endfor %}
{% endif %}
            <elementProp name="cass_User_Pass" elementType="Argument">
              <stringProp name="Argument.name">cass_User_Pass</stringProp>
              <stringProp name="Argument.value">{{ cass_user[0].username }}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
{% if groups['cassandra'] is defined %}
{% for host in groups[node_site + '-cassmeta'] %}
        <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="Testing Cassandra processes are up and running" enabled="true">
          <stringProp name="command">cassandra-${cass_node}/apache-cassandra-${cass_version}/bin/nodetool -h localhost status;ps -ef | grep -i cass</stringProp>
          <stringProp name="hostname">${cass_host{{ loop.index }}}</stringProp>
          <stringProp name="password">${cass_User_Pass}</stringProp>
          <intProp name="port">22</intProp>
          <stringProp name="username">${cass_User_Name}</stringProp>
        </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
		<hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="3254818">java</stringProp>
              <stringProp name="6615371">apache-cassandra-${cass_version}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
         <hashTree/>
		 </hashTree>
{% endfor %}
{% endif %}
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
