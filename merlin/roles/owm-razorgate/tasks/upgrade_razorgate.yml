#
# Handle Upgrade
#

- name: Set Package Name
  set_fact: 
    package_name: "razorgate"
  tags: ['owm-razorgate']

# Check specific version
- name: Get version of RPM
  shell: "`which yum` list installed {{ package_name }} | grep installed | awk '{ print $2 }'"
  register: rpm_version
  changed_when: False
  tags: ['owm-razorgate']
  check_mode: no

- debug:
     msg: "System has {{ package_name }}-{{rpm_version.stdout}} installed"
  tags: ['owm-razorgate']

# See which version is higher or lower
- name: Compare installed RPM version with expected version
  shell: '/tmp/compare_versions.sh {{razorgate_version}} {{rpm_version.stdout}}'
  register: version_comparison
  ignore_errors: yes
  changed_when: False
  tags: ['owm-razorgate']
  check_mode: no

- debug:
     msg: "Keeping the existing {{ package_name }}-{{rpm_version.stdout}} installed"
  when: version_comparison.rc == 0
  tags: ['owm-razorgate']
  
- name: Abort if razorgate for downgrade
  meta: end_play
  when: version_comparison.rc == 2


# Try to catch the case that user specified a RPM package that is not in the {{owm_repo_url}}
- name: Ensure {{owm_repo_url}} contains {{ package_name }}-{{razorgate_version}} RPM
  uri: 
    url: "{{owm_repo_url}}/{{ package_name }}-{{razorgate_version}}.x86_64.rpm"
    method: GET
    status_code: 200
  register: rpmpkg_file
  when: ( version_comparison.rc == 1 or version_comparison.rc == 2 )
  

- debug: 
     msg: "{{ package_name }}-{{razorgate_version}}.el6.x86_64.rpm is not found in {{owm_repo_url}}"
  when: version_comparison.rc != 0 and rpmpkg_file.content_type != "application/x-rpm"

- name: Abort if the {{ package_name }}-{{razorgate_version}} RPM  is missing
  meta: end_play
  when: version_comparison.rc != 0 and rpmpkg_file.content_type != "application/x-rpm"
  

- debug: 
     msg: "Do you want to continue the {{ package_name }} upgrade from {{rpm_version.stdout}} to {{razorgate_version}} ?"
  when: version_comparison.rc == 1 

- pause: seconds=30
  when: not ansible_check_mode and version_comparison.rc == 1

- name: Stop the RG
  shell: /opt/data/scripts/stop-rg.sh
  register: STOPRG  
  ignore_errors: true
  failed_when: STOPRG.rc >1
  when: not ansible_check_mode and version_comparison.rc == 1
  tags: ['owm-razorgate']
  
# If application is already installed, and is a lower version do an upgrade for configdb
- name: Upgrade {{ package_name }} from {{rpm_version.stdout}} to {{razorgate_version}}
  shell: 'RG_OWNER={{razorgate_owner}} rpm --nodeps -Uvh --prefix {{install_path}} {{owm_repo_url}}/razorgate-{{razorgate_version}}.x86_64.rpm'
  when: not ansible_check_mode and version_comparison.rc == 1 and "razorgate_upgrade_type == 'configdb'"
  tags: ['owm-razorgate']

# If application is already installed, and is a lower version do an upgrade for couchbase
- name: Upgrade {{ package_name }} from {{rpm_version.stdout}} to {{razorgate_version}}
  shell: 'rpm --nodeps -Uvh --prefix {{install_path}} {{owm_repo_url}}/razorgate-{{razorgate_version}}.x86_64.rpm'
  ignore_errors: true
  when: not ansible_check_mode and version_comparison.rc == 1 and "razorgate_upgrade_type == 'couchbase'"
  tags: ['owm-razorgate']
  
# Check specific version
- name: Get new version of RPM
  shell: "`which yum` list installed {{ package_name }} | grep installed | awk '{ print $2 }'"
  register: rpm_version
  changed_when: False
  tags: ['owm-razorgate']

- debug:
     msg: "System has {{ package_name }}-{{rpm_version.stdout}} installed (upgrade)"
  when: version_comparison.rc == 1
  tags: ['owm-razorgate']