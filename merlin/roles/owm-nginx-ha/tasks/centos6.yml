---
- name: Initialize repo
  copy:
    src: "centos.repo"
    dest: "/etc/yum.repos.d/centos.repo"
    mode: 0644
  tags: ['owm-affinity']

- name: Check if cluster-glue-libs is installed
  shell: rpm -q cluster-glue-libs
  register: CLUSTERGLUE
  failed_when: CLUSTERGLUE.rc > 1
  ignore_errors: true
  changed_when: no
  tags: ['owm-affinity']

- name: Installing cluster-glue-libs
  yum: name=cluster-glue-libs state=present disable_gpg_check=yes
  when: CLUSTERGLUE.rc != 0
  tags: ['owm-affinity']

- name: Task to move centos.repo to centos.repo_orig
  shell: mv /etc/yum.repos.d/centos.repo /etc/yum.repos.d/centos.repo_orig
  tags: ['owm-affinity']
  
- name: Check if Resource-agent is installed
  shell: rpm -q resource-agents
  register: RESOURCE
  failed_when: RESOURCE.rc > 1
  ignore_errors: true
  changed_when: no
  tags: ['owm-affinity']
  
- name: Installing Resource-agent
  yum: name=resource-agents 
  when: RESOURCE.rc != 0
  tags: ['owm-affinity']
  
- name: Task to move centos.repo_orig to centos.repo
  shell: mv /etc/yum.repos.d/centos.repo_orig /etc/yum.repos.d/centos.repo
  tags: ['owm-affinity']
  
- name: Check if pacemaker is installed
  shell: rpm -q pacemaker
  register: PACEMAKE
  failed_when: PACEMAKE.rc > 1
  ignore_errors: true
  changed_when: no
  tags: ['owm-affinity']

- name: Installing pacemaker RPM's
  yum: name=pacemaker state=present disable_gpg_check=yes
  when: PACEMAKE.rc != 0
  tags: ['owm-affinity']

- name: Check if cman is installed
  shell: rpm -q cman
  register: CMAN
  failed_when: CMAN.rc > 1
  ignore_errors: true
  changed_when: no
  tags: ['owm-affinity']

- name: Installing cman RPM's
  yum: name=cman state=present disable_gpg_check=yes
  when: CMAN.rc != 0
  tags: ['owm-affinity']

- name: Check if pcs is installed
  shell: rpm -q pcs
  register: PCS
  failed_when: PCS.rc > 1
  ignore_errors: true
  changed_when: no
  tags: ['owm-affinity']

- name: Installing pcs RPM's
  yum: name=pcs disable_gpg_check=yes
  when: PCS.rc != 0
  tags: ['owm-affinity']

- name: Check if ccs is installed
  shell: rpm -q ccs
  register: CCS
  failed_when: CCS.rc > 1
  ignore_errors: true
  changed_when: no
  tags: ['owm-affinity']

- name: Installing ccs RPM's
  yum: name=ccs state=present disable_gpg_check=yes
  when: CCS.rc != 0
  tags: ['owm-affinity']

- name: Copying Nginx Heartbeat file
  copy:
    src: "nginx"
    dest: "/usr/lib/ocf/resource.d/heartbeat/nginx"
    mode: 0777
  when: hostvars[inventory_hostname]['clusterId'] == "{{ node_cluster }}"
  tags: ['owm-affinity']
  
- name: To destroy the cluster configuration
  command: "pcs cluster destroy"
  when: hostvars[inventory_hostname]['clusterId'] == "{{ node_cluster }}"
  tags: ['owm-affinity']
  
- pause: seconds=20

- name: Creating Cluster Configuration file
  command: "ccs -f /etc/cluster/cluster.conf --createcluster affinitymgr"
  when: hostvars[inventory_hostname]['clusterId'] == "{{ node_cluster }}"
  tags: ['owm-affinity']

- name: Add nodes in a cluster
  command: "ccs -f /etc/cluster/cluster.conf --addnode {{ item }}"
  with_items: "{{ groups[node_site + '-affinity'] }}"
  when: hostvars['{{item}}']['clusterId'] == "{{ node_cluster }}"
  tags: ['owm-affinity']

- name: Add alternate name for mss in /etc/hosts
  lineinfile: dest=/etc/hosts state=present line='{% set mssaffinitygrpname = node_site+'-affinity-mss' %}{% if groups[mssaffinitygrpname] is defined %}{% for host in groups[mssaffinitygrpname] %}{% if hostvars[host]['clusterId']|string() == node_cluster|string() %}{{hostvars[host]['ansible_ssh_host']}} {{host}}-mss {% endif %}{% endfor %}{% endif %}'
  when: hostvars[inventory_hostname]['clusterId'] == "{{ node_cluster }}" 
  tags: ['owm-affinity']
  
- name: Add alternate name for mos in /etc/hosts
  lineinfile: dest=/etc/hosts state=present line='{% set mosaffinitygrpname = node_site+'-affinity-mos' %}{% if groups[mosaffinitygrpname] is defined %}{% for host in groups[mosaffinitygrpname] %}{% if hostvars[host]['clusterId']|string() == node_cluster|string() %}{{hostvars[host]['ansible_ssh_host']}} {{host}}-mos{% endif %}{% endfor %}{% endif %}'
  when: hostvars[inventory_hostname]['clusterId'] == "{{ node_cluster }}" 
  tags: ['owm-affinity']  

- name: Add alternate name for failover in /etc/hosts
  lineinfile: dest=/etc/hosts state=present line='{% set failoveraffinitygrpname = node_site+'-affinity-failover' %}{% if groups[failoveraffinitygrpname] is defined %}{% for host in groups[failoveraffinitygrpname] %}{% if hostvars[host]['clusterId']|string() == node_cluster|string() %}{{hostvars[host]['ansible_ssh_host']}} {{host}}-failover {% endif %}{% endfor %}{% endif %}'
  when: hostvars[inventory_hostname]['clusterId'] == "{{ node_cluster }}" 
  tags: ['owm-affinity']  
 
- name: Add an alternate name to a mss node
  command: "ccs -f /etc/cluster/cluster.conf --addalt {% set affinitygrpname = node_site+'-affinity-'+item %}{% if groups[affinitygrpname] is defined %}{% for host in groups[affinitygrpname] %}{% if hostvars[host]['clusterId']|string() == node_cluster|string() %} {{host}} {{host}}-{{item}} {% endif %}{% endfor %}{% endif %}"
  with_items:
    - "mss"
    - "mos"
    - "failover"
  when: inventory_hostname in groups['{{ node_site }}-affinity-mss'] and hostvars[inventory_hostname]['clusterId'] == "{{ node_cluster }}"
  tags: ['owm-affinity']

- name: Add an alternate name to a mos node
  command: "ccs -f /etc/cluster/cluster.conf --addalt {% set affinitygrpname = node_site+'-affinity-'+item %}{% if groups[affinitygrpname] is defined %}{% for host in groups[affinitygrpname] %}{% if hostvars[host]['clusterId']|string() == node_cluster|string() %} {{host}} {{host}}-{{item}} {% endif %}{% endfor %}{% endif %}"
  with_items:
    - "mss"
    - "mos"
    - "failover"
  when: inventory_hostname in groups['{{ node_site }}-affinity-mos'] and hostvars[inventory_hostname]['clusterId'] == "{{ node_cluster }}"
  tags: ['owm-affinity']

- name: Add an altternate name to a failover node
  command: "ccs -f /etc/cluster/cluster.conf --addalt {% set affinitygrpname = node_site+'-affinity-'+item %}{% if groups[affinitygrpname] is defined %}{% for host in groups[affinitygrpname] %}{% if hostvars[host]['clusterId']|string() == node_cluster|string() %} {{host}} {{host}}-{{item}} {% endif %}{% endfor %}{% endif %}"
  with_items:
    - "mss"
    - "mos"
    - "failover"
  when: inventory_hostname in groups['{{ node_site }}-affinity-failover'] and hostvars[inventory_hostname]['clusterId'] == "{{ node_cluster }}"
  tags: ['owm-affinity']  

- name: To add Fence
  command: "ccs -f /etc/cluster/cluster.conf --addfencedev pcmk agent=fence_pcmk"
  when: hostvars[inventory_hostname]['clusterId'] == "{{ node_cluster }}"
  tags: ['owm-affinity']

- name: To add method 
  command: "ccs -f /etc/cluster/cluster.conf --addmethod pcmk-redirect {{ item }}"
  with_items: "{{ groups[node_site + '-affinity'] }}"
  when: hostvars['{{item}}']['clusterId'] == "{{ node_cluster }}"
  tags: ['owm-affinity']

- name: To add Fence inst
  command: "ccs -f /etc/cluster/cluster.conf --addfenceinst pcmk {{ item }} pcmk-redirect port={{ item }}"
  with_items: "{{ groups[node_site + '-affinity'] }}"
  when: hostvars['{{item}}']['clusterId'] == "{{ node_cluster }}"
  tags: ['owm-affinity']

- name: To re-enable Quorum
  lineinfile: dest=/etc/sysconfig/cman state=present regexp='^#CMAN_QUORUM_TIMEOUT' line='CMAN_QUORUM_TIMEOUT=0'
  when: hostvars[inventory_hostname]['clusterId'] == "{{ node_cluster }}"
  tags: ['owm-affinity']

- name: To configure unicast
  lineinfile: dest=/etc/cluster/cluster.conf state=present regexp='^  <cman/>' line='<cman transport="udpu" port="5405" />'
  when: hostvars[inventory_hostname]['clusterId'] == "{{ node_cluster }}"
  tags: ['owm-affinity']

- name: Start cman, pcsd, pacemaker service
  service: name={{item}} state=started
  with_items:
    - 'pcsd'  
    - 'cman'
    - 'pacemaker'
  when: hostvars[inventory_hostname]['clusterId'] == "{{ node_cluster }}"
  tags: ['owm-affinity']
  
- pause: seconds=20    
 
- name: Needed commands for configuration
  command: "{{item}}"
  with_items:
    - 'pcs property set stonith-enabled=false'
    - 'pcs property set no-quorum-policy=freeze'
  when: inventory_hostname in groups['{{ node_site }}-affinity-mss'] and hostvars[inventory_hostname]['clusterId'] == "{{ node_cluster }}"
  tags: ['owm-affinity']  
  
- name: Configuring affinity manager resource AM_mss_nginx
  command: 'pcs resource create AM_mss_nginx_{{node_cluster}} ocf:heartbeat:nginx configfile={{ nginx_home_dir }}/nginx_mss/nginx{{ owm_nginx_version }}/conf/nginx.conf httpd={{ nginx_home_dir }}/nginx_mss/nginx{{ owm_nginx_version }}/sbin/nginx options="-p {{ nginx_home_dir }}/nginx_mss/nginx{{ owm_nginx_version }}/"  op monitor interval=20s --force'
  when: inventory_hostname in groups['{{ node_site }}-affinity-mss'] and hostvars[inventory_hostname]['clusterId'] == "{{ node_cluster }}" 
  tags: ['owm-affinity']

- pause: seconds=60  

- name: Configuring affinity manager resource AM_mos_nginx
  command: 'pcs resource create AM_mos_nginx_{{node_cluster}} ocf:heartbeat:nginx configfile={{ nginx_home_dir }}/nginx_mos/nginx{{ owm_nginx_version }}/conf/nginx.conf httpd={{ nginx_home_dir }}/nginx_mos/nginx{{ owm_nginx_version }}/sbin/nginx options="-p {{ nginx_home_dir }}/nginx_mos/nginx{{ owm_nginx_version }}/"  op monitor interval=20s --force'
  when: inventory_hostname in groups['{{ node_site }}-affinity-mss'] and hostvars[inventory_hostname]['clusterId'] == "{{ node_cluster }}" 
  tags: ['owm-affinity']
  
- pause: seconds=60  

- name: Determine affinity mos name
  set_fact:
    mos_host: |
      {% for host in groups[node_site + "-affinity-mos"] %}
      {%- if hostvars[host]['clusterId']|string() == node_cluster|string() -%}
      {{ host }}
      {%- endif -%}
      {% endfor %}
  tags: [ 'owm-affinity']

- name: Determine affinity mss name
  set_fact:
    mss_host: |
      {% for host in groups[node_site + "-affinity-mss"] %}
      {%- if hostvars[host]['clusterId']|string() == node_cluster|string() -%}
      {{ host }}
      {%- endif -%}
      {% endfor %}
  tags: [ 'owm-affinity' ]  

- name: Determine affinity failover name
  set_fact:
    failover_host: |
      {% for host in groups[node_site + "-affinity-failover"] %}
      {%- if hostvars[host]['clusterId']|string() == node_cluster|string() -%}
      {{ host }}
      {%- endif -%}
      {% endfor %}
  tags: [ 'owm-affinity']   
  
- name: Add prefer constraints to the resource
  command: "pcs constraint location AM_mss_nginx_{{node_cluster}} prefers {{ mss_host }}"
  when: inventory_hostname in groups['{{ node_site }}-affinity-mss'] and hostvars[inventory_hostname]['clusterId'] == "{{ node_cluster }}"
  tags: ['owm-affinity']
  
- name: Add prefer constraints to the resource
  command: "pcs constraint location AM_mos_nginx_{{node_cluster}} prefers {{ mos_host }}"
  when: inventory_hostname in groups['{{ node_site }}-affinity-mss'] and hostvars[inventory_hostname]['clusterId'] == "{{ node_cluster }}"
  tags: ['owm-affinity']   
  
- name: Add mss avoid constraints to the resource
  command: "pcs constraint location AM_mss_nginx_{{node_cluster}} avoids {{ mos_host }}"
  when: inventory_hostname in groups['{{ node_site }}-affinity-mss'] and hostvars[inventory_hostname]['clusterId'] == "{{ node_cluster }}"
  tags: [ 'owm-affinity'] 

- name: Add mos avoid constraints to the resource
  command: "pcs constraint location AM_mos_nginx_{{node_cluster}} avoids {{ mss_host }}"
  when: inventory_hostname in groups['{{ node_site }}-affinity-mss'] and hostvars[inventory_hostname]['clusterId'] == "{{ node_cluster }}"
  tags: ['owm-affinity']  

- name: Configure the VIP address to be managed by the cluster for mss
  command: "pcs resource create AM_mss_IP_{{node_cluster}} IPaddr2 ip={{hostvars[inventory_hostname]['VIP']}} cidr_netmask=32"
  when: inventory_hostname in groups['{{ node_site }}-affinity-mss'] and hostvars[inventory_hostname]['clusterId'] == "{{ node_cluster }}"
  tags: ['owm-affinity' ]  
  
- pause: seconds=20

- name: Configure the VIP address to be managed by the cluster for mos
  command: "pcs resource create AM_mos_IP_{{node_cluster}} IPaddr2 ip={{hostvars[inventory_hostname]['VIP']}} cidr_netmask=32"
  when: inventory_hostname in groups['{{ node_site }}-affinity-mos'] and hostvars[inventory_hostname]['clusterId'] == "{{ node_cluster }}"
  tags: ['owm-affinity']    

- pause: seconds=20
  
- name: Configure the dependencies for the nginx process and the VIP address
  command: "pcs constraint colocation add AM_{{item}}_IP_{{node_cluster}} with AM_{{item}}_nginx_{{node_cluster}} INFINITY"
  when: inventory_hostname in groups['{{ node_site }}-affinity-mss'] and hostvars[inventory_hostname]['clusterId'] == "{{ node_cluster }}"
  with_items:
    - "mss"
    - "mos"
  tags: ['owm-affinity'] 
  
- name: Copying password change file
  copy:
    src: "passchange"
    dest: "{{ nginx_home_dir }}/passchange.sh"
    mode: 0777
  when: hostvars[inventory_hostname]['clusterId'] == "{{ node_cluster }}"
  tags: ['owm-affinity']

- name: Copying cluster auth
  copy:
    src: "clusterauth"
    dest: "{{ nginx_home_dir }}/clusterauth.sh"
    mode: 0777
  when: inventory_hostname in groups['{{ node_site }}-affinity-mss'] and hostvars[inventory_hostname]['clusterId'] == "{{ node_cluster }}"
  tags: ['owm-affinity']  
  
- name: Changing password for user hacluster
  shell: "bash {{ nginx_home_dir }}/passchange.sh"
  when: hostvars[inventory_hostname]['clusterId'] == "{{ node_cluster }}"
  tags: ['owm-affinity']

- name: Authorise
  command: "bash {{ nginx_home_dir }}/clusterauth.sh {{mss_host}} {{mos_host}} {{failover_host}}"
  when: inventory_hostname in groups['{{ node_site }}-affinity-mss'] and hostvars[inventory_hostname]['clusterId'] == "{{ node_cluster }}"  
  tags: ['owm-affinity']
 
- name: Start cluster
  command: pcs cluster start --all
  when: inventory_hostname in groups['{{ node_site }}-affinity-mss'] and hostvars[inventory_hostname]['clusterId'] == "{{ node_cluster }}"  
  tags: ['owm-affinity']
  
- name: Start Nginx on mss and mos nodes
  shell: "{{ nginx_home_dir }}/nginx_{{ item }}/nginx{{ owm_nginx_version }}/scripts/nginx restart"
  when: inventory_hostname in groups['{{ node_site }}-affinity-{{item}}'] and hostvars[inventory_hostname]['clusterId'] == "{{ node_cluster }}"
  with_items:
    - "mss"
    - "mos"
  tags: [ 'owm-affinity']

- name: Start Nginx on failover node
  command: "{{ nginx_home_dir }}/nginx_{{ item }}/nginx{{ owm_nginx_version }}/scripts/nginx restart"
  when: inventory_hostname in groups['{{ node_site }}-affinity-failover'] and hostvars[inventory_hostname]['clusterId'] == "{{ node_cluster }}"
  with_items:
    - "mss"
    - "mos"
  tags: [ 'owm-affinity']    

- name: stop cman, pcsd, pacemaker service
  service: name={{item}} state=stopped
  when: hostvars[inventory_hostname]['clusterId'] == "{{ node_cluster }}"
  with_items:
    - 'pcsd'  
    - 'pacemaker'
    - 'cman'
  tags: ['owm-affinity']
  
- name: Start cman, pcsd, pacemaker service
  service: name={{item}} state=started
  when: hostvars[inventory_hostname]['clusterId'] == "{{ node_cluster }}"
  with_items:
    - 'pcsd'  
    - 'cman'
    - 'pacemaker'
  tags: ['owm-affinity'] 
